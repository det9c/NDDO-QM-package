      SUBROUTINE ROTD (W,YY,LIMIJ,LIMKL,r2cent)
C     *
C     TRANSFORMATION OF TWO-ELECTRON TWO-CENTER INTEGRALS (SPD BASIS)
C     FROM THE LOCAL TO THE MOLECULAR COORDINATE SYSTEM.
C     A TWO-STEP PROCEDURE IS USED.
C     *
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
CSET  IROTD : CHOICE OF METHOD FOR ROTATING TWO-ELECTRON SPD INTEGRALS.
CSET  IROTV : DEFAULT VALUE FOR OPTION IROTD.
CSET  IROTV : MACHINE-SPECIFIC VALUE WHICH MAY BE REDEFINED.
CSET  IROTV = 1  UNROLLED SCALAR CODE.
CSET  IROTV = 2  VECTORIZED CODE WITH SMALL LOOPS.
CSET  IROTV = 3  STRAIGHT MATRIX MULTIPLICATIONS WITH MANY ZERO VALUES.
      PARAMETER (IROTV=1)
CRAY  PARAMETER (IROTV=3)
      PARAMETER (LIMY=45)
      PARAMETER (LIMV=45)
      PARAMETER (VSMALL=1.0D-10)
      LOGICAL R2CENT
c      COMMON
c     ./CONSTN/ ZERO,ONE,TWO,THREE,FOUR,PT5,PT25
c     ./DPARM6/ R2CENT(45,45)
      DATA ZERO  /  0.0D0/
      DATA ONE   /  1.0D0/
      DATA TWO   /  2.0D0/
      DATA THREE /  3.0D0/
      DATA FOUR  /  4.0D0/
      DATA PT5   /  0.5D0/
      DATA PT25  /  0.25D0/
      dimension r2cent(45,45)
      DIMENSION W(LIMKL,LIMIJ)
      DIMENSION V(LIMV,LIMV)
      DIMENSION YM(LIMY,LIMY)
      DIMENSION YY(15,45)
      DIMENSION WKL(45)
      DIMENSION MET(45)
      DIMENSION META(6),METB(6)
      DIMENSION METI(15,6)
      DIMENSION IKLV(45)
C     MET ASSIGNS A PAIR TYPE (1 SS, 2 PS, 3 PP, 4 DS, 5 DP, 6 DD)
C     MET(KL) TO EACH STANDARD PAIR INDEX KL=INDX(K)+L.
      DATA MET /  1, 2, 3, 2, 3, 3, 2, 3, 3, 3, 4, 5, 5, 5, 6, 
     1            4, 5, 5, 5, 6, 6, 4, 5, 5, 5, 6, 6, 6, 4, 5,
     2            5, 5, 6, 6, 6, 6, 4, 5, 5, 5, 6, 6, 6, 6, 6/
C     META AND METB DEFINE THE FIRST AND LAST ADDRESS OF A SPECIAL
C     PAIR INDEX (KLV) FOR EACH PAIR TYPE (1-1 SS, 2-4 PS, 5-10 PP,
C     11-15 DS, 16-30 DP, 31-45 DD). WITHIN EACH SUCH RANGE, THE PAIR
C     INDICES ARE ORDERED IN THE STANDARD MANNER.
      DATA META/  1, 2, 5,11,16,31 /
      DATA METB/  1, 4,10,15,30,45 /
C     METI(I,MKL) DEFINES THE STANDARD PAIR INDICES IJ BELONGING
C     TO A GIVEN VALUE OF MKL=MET(KL).
      DATA METI/  1, 14*0,
     1            2, 4, 7, 12*0,
     2            3, 5, 6, 8, 9,10,  9*0,
     3           11,16,22,29,37,    10*0,
     4           12,13,14,17,18,19,23,24,25,30,31,32,38,39,40,
     5           15,20,21,26,27,28,33,34,35,36,41,42,43,44,45/
C     IKLV REFERS A GIVEN SPECIAL PAIR INDEX (KLV) - USED FOR STORING
C     INTERMEDIATE INTEGRALS - TO THE STANDARD PAIR INDEX KL=INDX(K)+L
C     SUCH THAT KL=IKLV(KLV).
      DATA IKLV/  1, 2, 4, 7, 3, 5, 6, 8, 9,10,11,16,22,29,37,
     1           12,13,14,17,18,19,23,24,25,30,31,32,38,39,40,
     2           15,20,21,26,27,28,33,34,35,36,41,42,43,44,45/
C     *
C *** INITIALIZATION.
C     *
      DO 10 IJ=1,LIMIJ
      DO 10 KL=1,LIMKL
   10 V(KL,IJ) = ZERO
      IROTD    = IROTV
      IF(IROTD.EQ.2) GO TO 300
      IF(IROTD.GT.2) GO TO 500
C     *
C *** FIRST SECTION. UNROLLED SCALAR CODE.
C     *
C *** DEFINITION OF INDICES FOR INTERMEDIATE INTEGRALS V(KL,IJ),
C     FINAL INTEGRALS W(KL,IJ), AND TRANSFORMATION MATRIX YY(M,KL).
C     IJ    STANDARD PAIR INDEX.
C     KL    STANDARD PAIR INDEX.
C     M     CONSECUTIVE INDEX (UP TO 1 FOR KL=SS, 3 FOR KL=PS,
C           6 FOR KL=PP, 5 FOR KL=DS, 15 FOR KL=PD AND KL=DD).
C *** FIRST STEP - TRANSFORMATION FOR INDICES KL IN (KL,IJ).
C     LOOP OVER OUTER TWO INDICES IJ (NOT TRANSFORMED).
C$DIR SCALAR
*VDIR NOVECTOR
*VOCL LOOP,SCALAR
      DO 180 IJ=1,LIMIJ
C     LOOP OVER INNER TWO INDICES KL (TRANSFORMED).
CDIR$ NEXTSCALAR
C$DIR SCALAR
*VDIR NOVECTOR
*VOCL LOOP,SCALAR
      DO 170 KL=1,LIMKL
      IF(R2CENT(KL,IJ)) THEN
         WREPP    = W(KL,IJ)
         W(KL,IJ) = ZERO
         GO TO (110,120,130,140,150,160), MET(KL)
  110    V(1,IJ)  =  WREPP
         GO TO 170
  120    CONTINUE
         V(2,IJ)  = V(2,IJ)  + YY(1,KL) * WREPP
         V(4,IJ)  = V(4,IJ)  + YY(2,KL) * WREPP
         V(7,IJ)  = V(7,IJ)  + YY(3,KL) * WREPP
         GO TO 170
  130    CONTINUE
         V(3,IJ)  = V(3,IJ)  + YY(1,KL) * WREPP
         V(5,IJ)  = V(5,IJ)  + YY(2,KL) * WREPP
         V(6,IJ)  = V(6,IJ)  + YY(3,KL) * WREPP
         V(8,IJ)  = V(8,IJ)  + YY(4,KL) * WREPP 
         V(9,IJ)  = V(9,IJ)  + YY(5,KL) * WREPP
         V(10,IJ) = V(10,IJ) + YY(6,KL) * WREPP
         GO TO 170
  140    CONTINUE
         V(11,IJ) = V(11,IJ) + YY(1,KL) * WREPP
         V(16,IJ) = V(16,IJ) + YY(2,KL) * WREPP
         V(22,IJ) = V(22,IJ) + YY(3,KL) * WREPP
         V(29,IJ) = V(29,IJ) + YY(4,KL) * WREPP
         V(37,IJ) = V(37,IJ) + YY(5,KL) * WREPP
         GO TO 170
  150    CONTINUE
         V(12,IJ) = V(12,IJ) + YY( 1,KL) * WREPP
         V(13,IJ) = V(13,IJ) + YY( 2,KL) * WREPP
         V(14,IJ) = V(14,IJ) + YY( 3,KL) * WREPP
         V(17,IJ) = V(17,IJ) + YY( 4,KL) * WREPP
         V(18,IJ) = V(18,IJ) + YY( 5,KL) * WREPP
         V(19,IJ) = V(19,IJ) + YY( 6,KL) * WREPP
         V(23,IJ) = V(23,IJ) + YY( 7,KL) * WREPP
         V(24,IJ) = V(24,IJ) + YY( 8,KL) * WREPP
         V(25,IJ) = V(25,IJ) + YY( 9,KL) * WREPP
         V(30,IJ) = V(30,IJ) + YY(10,KL) * WREPP
         V(31,IJ) = V(31,IJ) + YY(11,KL) * WREPP
         V(32,IJ) = V(32,IJ) + YY(12,KL) * WREPP
         V(38,IJ) = V(38,IJ) + YY(13,KL) * WREPP
         V(39,IJ) = V(39,IJ) + YY(14,KL) * WREPP
         V(40,IJ) = V(40,IJ) + YY(15,KL) * WREPP
         GO TO 170
  160    CONTINUE
         V(15,IJ) = V(15,IJ) + YY( 1,KL) * WREPP
         V(20,IJ) = V(20,IJ) + YY( 2,KL) * WREPP
         V(21,IJ) = V(21,IJ) + YY( 3,KL) * WREPP
         V(26,IJ) = V(26,IJ) + YY( 4,KL) * WREPP
         V(27,IJ) = V(27,IJ) + YY( 5,KL) * WREPP
         V(28,IJ) = V(28,IJ) + YY( 6,KL) * WREPP
         V(33,IJ) = V(33,IJ) + YY( 7,KL) * WREPP
         V(34,IJ) = V(34,IJ) + YY( 8,KL) * WREPP
         V(35,IJ) = V(35,IJ) + YY( 9,KL) * WREPP
         V(36,IJ) = V(36,IJ) + YY(10,KL) * WREPP
         V(41,IJ) = V(41,IJ) + YY(11,KL) * WREPP
         V(42,IJ) = V(42,IJ) + YY(12,KL) * WREPP
         V(43,IJ) = V(43,IJ) + YY(13,KL) * WREPP
         V(44,IJ) = V(44,IJ) + YY(14,KL) * WREPP
         V(45,IJ) = V(45,IJ) + YY(15,KL) * WREPP
      ENDIF
  170 CONTINUE
  180 CONTINUE
C *** SECOND STEP - TRANSFORMATION FOR OUTER TWO INDICES.
C     LOOP OVER OUTER TWO INDICES IJ (TRANSFORMED).
C$DIR SCALAR
*VDIR NOVECTOR
*VOCL LOOP,SCALAR
      DO 280 IJ=1,LIMIJ
      MIJ    = MET(IJ)
C     LOOP OVER INNER TWO INDICES KL (NOT TRANSFORMED).
CDIR$ NEXTSCALAR
C$DIR SCALAR
*VDIR NOVECTOR
*VOCL LOOP,SCALAR
      DO 270 KL=1,LIMKL
      IF(ABS(V(KL,IJ)).GT.VSMALL) THEN
         WREPP  = V(KL,IJ)
         GO TO (210,220,230,240,250,260), MIJ
  210    W(KL,1)  =  WREPP
         GO TO 270
  220    CONTINUE
         W(KL,2)  = W(KL,2)  + YY(1,IJ) * WREPP
         W(KL,4)  = W(KL,4)  + YY(2,IJ) * WREPP
         W(KL,7)  = W(KL,7)  + YY(3,IJ) * WREPP
         GO TO 270
  230    CONTINUE
         W(KL,3)  = W(KL,3)  + YY(1,IJ) * WREPP
         W(KL,5)  = W(KL,5)  + YY(2,IJ) * WREPP
         W(KL,6)  = W(KL,6)  + YY(3,IJ) * WREPP
         W(KL,8)  = W(KL,8)  + YY(4,IJ) * WREPP 
         W(KL,9)  = W(KL,9)  + YY(5,IJ) * WREPP
         W(KL,10) = W(KL,10) + YY(6,IJ) * WREPP
         GO TO 270
  240    CONTINUE
         W(KL,11) = W(KL,11) + YY(1,IJ) * WREPP
         W(KL,16) = W(KL,16) + YY(2,IJ) * WREPP
         W(KL,22) = W(KL,22) + YY(3,IJ) * WREPP
         W(KL,29) = W(KL,29) + YY(4,IJ) * WREPP
         W(KL,37) = W(KL,37) + YY(5,IJ) * WREPP
         GO TO 270
  250    CONTINUE
         W(KL,12) = W(KL,12) + YY( 1,IJ) * WREPP
         W(KL,13) = W(KL,13) + YY( 2,IJ) * WREPP
         W(KL,14) = W(KL,14) + YY( 3,IJ) * WREPP
         W(KL,17) = W(KL,17) + YY( 4,IJ) * WREPP
         W(KL,18) = W(KL,18) + YY( 5,IJ) * WREPP
         W(KL,19) = W(KL,19) + YY( 6,IJ) * WREPP
         W(KL,23) = W(KL,23) + YY( 7,IJ) * WREPP
         W(KL,24) = W(KL,24) + YY( 8,IJ) * WREPP
         W(KL,25) = W(KL,25) + YY( 9,IJ) * WREPP
         W(KL,30) = W(KL,30) + YY(10,IJ) * WREPP
         W(KL,31) = W(KL,31) + YY(11,IJ) * WREPP
         W(KL,32) = W(KL,32) + YY(12,IJ) * WREPP
         W(KL,38) = W(KL,38) + YY(13,IJ) * WREPP
         W(KL,39) = W(KL,39) + YY(14,IJ) * WREPP
         W(KL,40) = W(KL,40) + YY(15,IJ) * WREPP
         GO TO 270
  260    CONTINUE
         W(KL,15) = W(KL,15) + YY( 1,IJ) * WREPP
         W(KL,20) = W(KL,20) + YY( 2,IJ) * WREPP
         W(KL,21) = W(KL,21) + YY( 3,IJ) * WREPP
         W(KL,26) = W(KL,26) + YY( 4,IJ) * WREPP
         W(KL,27) = W(KL,27) + YY( 5,IJ) * WREPP
         W(KL,28) = W(KL,28) + YY( 6,IJ) * WREPP
         W(KL,33) = W(KL,33) + YY( 7,IJ) * WREPP
         W(KL,34) = W(KL,34) + YY( 8,IJ) * WREPP
         W(KL,35) = W(KL,35) + YY( 9,IJ) * WREPP
         W(KL,36) = W(KL,36) + YY(10,IJ) * WREPP
         W(KL,41) = W(KL,41) + YY(11,IJ) * WREPP
         W(KL,42) = W(KL,42) + YY(12,IJ) * WREPP
         W(KL,43) = W(KL,43) + YY(13,IJ) * WREPP
         W(KL,44) = W(KL,44) + YY(14,IJ) * WREPP
         W(KL,45) = W(KL,45) + YY(15,IJ) * WREPP
      ENDIF
  270 CONTINUE
  280 CONTINUE
      RETURN
C     *
C *** SECOND SECTION. ALTERNATIVE VECTORIZED CODE.
C     *
C *** DEFINITION OF INDICES FOR INTERMEDIATE INTEGRALS V(KLV,IJ),
C     FINAL INTEGRALS W(KL,IJ), AND TRANSFORMATION MATRIX YY(M,KL).
C     IJ    STANDARD PAIR INDEX.
C     KL    STANDARD PAIR INDEX.
C     KLV   SPECIAL INDEX SUCH THAT THE INTERMEDIATE ARRAY IS
C           ACCESSED SEQUENTIALLY WITH STRIDE 1 (SEE BELOW).
C           THE CORRESPONDENCE OF KLV WITH THE STANDARD PAIR
C           INDEX IS DEFINED IN IKLV (SEE DATA STATEMENT).
C     M     CONSECUTIVE INDEX (UP TO 1 FOR KL=SS, 3 FOR KL=PS,
C           6 FOR KL=PP, 5 FOR KL=DS, 15 FOR KL=PD AND KL=DD).
C
C     KLV   1  2  3  4  5  6  7  8  9 10 11 12 13 14 15
C     K     1  2  3  4  2  3  3  4  4  4  5  6  7  8  9
C     L     1  1  1  1  2  2  3  2  3  4  1  1  1  1  1
C     TYPE SS PS PS PS PP PP PP PP PP PP DS DS DS DS DS
C
C     KLV  16 17 18 19 20 21 22 23 24 25 26 27 28 29 30
C     K     5  5  5  6  6  6  7  7  7  8  8  8  9  9  9
C     L     2  3  4  2  3  4  2  3  4  2  3  4  2  3  4
C     TYPE DP DP DP DP DP DP DP DP DP DP DP DP DP DP DP
C
C     KLV  31 32 33 34 35 36 37 38 39 40 41 42 43 44 45
C     K     5  6  6  7  7  7  8  8  8  8  9  9  9  9  9
C     L     5  5  6  5  6  7  5  6  7  8  5  6  7  8  9
C     TYPE DD DD DD DD DD DD DD DD DD DD DD DD DD DD DD
C
C     TYPE SS PS PP DS DP DD
C     MET   1  2  3  4  5  6    LABEL FOR GIVEN TYPE
C     META  1  2  5 11 16 31    FIRST KLV VALUE FOR GIVEN TYPE
C     METB  1  4 10 15 30 45    LAST  KLV VALUE FOR GIVEN TYPE
C
C     *
C *** FIRST STEP - TRANSFORMATION FOR INDICES KL IN (KL,IJ).
  300 CONTINUE
C     LOOP OVER OUTER TWO INDICES IJ (NOT TRANSFORMED).
      DO 330 IJ=1,LIMIJ
C     LOOP OVER INNER TWO INDICES KL (TRANSFORMED).
      DO 320 KL=1,LIMKL
      IF(R2CENT(KL,IJ)) THEN
         WREPP  = W(KL,IJ)
         MKL    = MET(KL)
         KLA    = META(MKL)
         KLB    = METB(MKL)
         DO 310 KLV=KLA,KLB
  310    V(KLV,IJ) = V(KLV,IJ) + YY(KLV-KLA+1,KL)*WREPP
      ENDIF
  320 CONTINUE
  330 CONTINUE
C *** SECOND STEP - TRANSFORMATION FOR OUTER TWO INDICES.
C     LOOP OVER INNER TWO INDICES KL (NOT TRANSFORMED).
      DO 450 KLV=1,LIMKL
      KL     = IKLV(KLV)
C     INITIALIZE BUFFER.
      DO 410 IJ=1,LIMIJ
  410 WKL(IJ)= ZERO
C     LOOP OVER OUTER TWO INDICES IJ (TRANSFORMED).
      DO 430 IJ=1,LIMIJ
      IF(ABS(V(KLV,IJ)).GT.VSMALL) THEN
         MIJ    = MET(IJ)
         MIJA   = META(MIJ)
         MIJB   = METB(MIJ)
         WREPP  = V(KLV,IJ)
         DO 420 M=MIJA,MIJB
  420    WKL(M) = WKL(M) + YY(M-MIJA+1,IJ)*WREPP
      ENDIF
  430 CONTINUE
C     TRANSFER RESULTS FROM BUFFER TO W(KL,IJ).
      DO 440 IJ=1,LIMIJ
  440 W(KL,IKLV(IJ)) = WKL(IJ)
  450 CONTINUE
      RETURN
C     *
C *** THIRD SECTION. STRAIGHT MATRIX MANIPULATIONS.
C     W(MOL,TRANSPOSE) = Y(TRANSPOSE) * W(LOC,TRANSPOSE)  * Y
C     THE INTEGRALS IN THE MOLECULAR COORDINATE SYSTEM ARE NEEDED
C     AS A TRANSPOSED MATRIX. THEREFORE THE INTEGRALS IN THE LOCAL
C     COORDINATE SYSTEM ARE ALSO PROVIDED AS A TRANSPOSED MATRIX.
C     THE TRANSFORMATION MATRIX YM IS GENERATED IN TRANSPOSED FORM,
C     Y = YM(TRANSPOSE), Y(TRANSPOSE) = YM,
C     FROM THE ELEMENTS OF ARRAY YY.
C     *
C     STANDARD PAIR INDICES ARE USED THROUGHOUT. THEY REFER TO THE
C     ORDER OF ATOMIC ORBITALS IN INTEGRAL EVALUATION FOR W(LOC),
C     AND TO THAT IN THE SCF CALCULATION FOR W(MOL). THE MATRIX Y
C     EFFECTS THE SWITCH FROM ONE ORDERING SCHEME TO THE OTHER.
C     *
  500 CONTINUE
C *** INITIALIZATION.
      LIMYM  = MAX(LIMIJ,LIMKL)
      DO 510 IJ=1,LIMYM
      DO 510 KL=1,LIMYM
  510 YM(KL,IJ) = ZERO
      YM( 1, 1) = ONE
      DO 530 KL=2,LIMYM
      MKL    = MET(KL)
      NKL    = METB(MKL)-META(MKL)+1
      DO 520 I=1,NKL
  520 YM(METI(I,MKL),KL) = YY(I,KL)
  530 CONTINUE
C *** FIRST IMPLEMENTATION OF THE TWO-STEP TRANSFORMATION.
C     V(INTERMEDIATE)  = YM * W(LOC,TRANSPOSE)
C     W(MOL,TRANSPOSE) = V(INTERMEDIATE) * YM(TRANSPOSE).
C     FORTRAN VERSION OF DGEMM CHECKS ON SPARSITY OF SECOND MATRIX.
      IF(IROTD.EQ.3) THEN
         CALL DGEMM ('N','N',LIMKL,LIMIJ,LIMKL,ONE,YM,LIMY,W,LIMKL,
     1               ZERO,V,LIMV)
         CALL DGEMM ('N','T',LIMKL,LIMIJ,LIMIJ,ONE,V,LIMV,YM,LIMY,
     1               ZERO,W,LIMKL)
      ENDIF
C *** SECOND IMPLEMENTATION OF THE TWO-STEP TRANSFORMATION.
C     V(INTERMEDIATE)  = W(LOC,TRANSPOSE) * YM(TRANSPOSE).
C     W(MOL,TRANSPOSE) = YM * V(INTERMEDIATE).
C     FORTRAN VERSION OF DGEMM CHECKS ON SPARSITY OF SECOND MATRIX.
      IF(IROTD.EQ.4) THEN
         CALL DGEMM ('N','T',LIMKL,LIMIJ,LIMIJ,ONE,W,LIMKL,YM,LIMY,
     1               ZERO,V,LIMV)
         CALL DGEMM ('N','N',LIMKL,LIMIJ,LIMKL,ONE,YM,LIMY,V,LIMV,
     1               ZERO,W,LIMKL)
      ENDIF
      RETURN
      END
